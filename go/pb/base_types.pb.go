// SPDX-FileCopyrightText: 2024 - 2025 Mass Labs
//
// SPDX-License-Identifier: MIT

// Generated from network-schema/base_types.proto at version v4

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: base_types.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sender chooses a unique number per request that must not
	// conflict with requests the other party sends.
	// one suggestion would be each party keeps a counter per sessions.
	// responses use the negative request number.
	Raw           int64 `protobuf:"zigzag64,1,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestId) Reset() {
	*x = RequestId{}
	mi := &file_base_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestId) ProtoMessage() {}

func (x *RequestId) ProtoReflect() protoreflect.Message {
	mi := &file_base_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestId.ProtoReflect.Descriptor instead.
func (*RequestId) Descriptor() ([]byte, []int) {
	return file_base_types_proto_rawDescGZIP(), []int{0}
}

func (x *RequestId) GetRaw() int64 {
	if x != nil {
		return x.Raw
	}
	return 0
}

type Signature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Raw           []byte                 `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signature) Reset() {
	*x = Signature{}
	mi := &file_base_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_base_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_base_types_proto_rawDescGZIP(), []int{1}
}

func (x *Signature) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type PublicKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Raw           []byte                 `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	mi := &file_base_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_base_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_base_types_proto_rawDescGZIP(), []int{2}
}

func (x *PublicKey) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type Uint256 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Raw           []byte                 `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Uint256) Reset() {
	*x = Uint256{}
	mi := &file_base_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uint256) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint256) ProtoMessage() {}

func (x *Uint256) ProtoReflect() protoreflect.Message {
	mi := &file_base_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint256.ProtoReflect.Descriptor instead.
func (*Uint256) Descriptor() ([]byte, []int) {
	return file_base_types_proto_rawDescGZIP(), []int{3}
}

func (x *Uint256) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type ObjectId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Raw           []byte                 `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectId) Reset() {
	*x = ObjectId{}
	mi := &file_base_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectId) ProtoMessage() {}

func (x *ObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_base_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectId.ProtoReflect.Descriptor instead.
func (*ObjectId) Descriptor() ([]byte, []int) {
	return file_base_types_proto_rawDescGZIP(), []int{4}
}

func (x *ObjectId) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

var File_base_types_proto protoreflect.FileDescriptor

var file_base_types_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x22,
	0x1d, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x1d,
	0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x1d, 0x0a,
	0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x1b, 0x0a, 0x07,
	0x55, 0x69, 0x6e, 0x74, 0x32, 0x35, 0x36, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x1c, 0x0a, 0x08, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_base_types_proto_rawDescOnce sync.Once
	file_base_types_proto_rawDescData []byte
)

func file_base_types_proto_rawDescGZIP() []byte {
	file_base_types_proto_rawDescOnce.Do(func() {
		file_base_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_base_types_proto_rawDesc), len(file_base_types_proto_rawDesc)))
	})
	return file_base_types_proto_rawDescData
}

var file_base_types_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_base_types_proto_goTypes = []any{
	(*RequestId)(nil), // 0: market.mass.RequestId
	(*Signature)(nil), // 1: market.mass.Signature
	(*PublicKey)(nil), // 2: market.mass.PublicKey
	(*Uint256)(nil),   // 3: market.mass.Uint256
	(*ObjectId)(nil),  // 4: market.mass.ObjectId
}
var file_base_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_base_types_proto_init() }
func file_base_types_proto_init() {
	if File_base_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_base_types_proto_rawDesc), len(file_base_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_types_proto_goTypes,
		DependencyIndexes: file_base_types_proto_depIdxs,
		MessageInfos:      file_base_types_proto_msgTypes,
	}.Build()
	File_base_types_proto = out.File
	file_base_types_proto_goTypes = nil
	file_base_types_proto_depIdxs = nil
}
