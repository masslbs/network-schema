; SPDX-FileCopyrightText: 2024 - 2025 Mass Labs
;
; SPDX-License-Identifier: MIT

PublicKey = bytes
Hash = bytes .size 32
Signature = bytes .size 65
Uint256 = bytes .size (1..32)

PathSegment = text / unsigned / bytes
OpString = "add" / "replace" / "remove" / "increment" / "decrement" / "append"

Patch = {
  Op: OpString,
  Path: [+ PathSegment],
  Value: any
}

PatchSet = {
  tokens: [+CapToken],
  patchSetRootHash: bytes
  nonce: uint,
  iat: uint         ; Issued At https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3
}

CoseHeader = {
   alg: -47 /  -65537 ; sep256k1 or SIWE encoded
}

SignedPatchSet = #6.18([
   header : bstr .cbor CoseHeader,
   payload : bstr .cbor PatchSet,
   Signature
])

Capability = {
  can: [+ OpString],
  path: [+ PathSegment]
}

CapTokenPayload = {
  iss: PublicKey      ; the PublicKey of the issuer
  aud: bytes,         ; audence https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3
  iat: uint           ; Issued At https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3
  ? exp: uint,        ; Expiration Time https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4
  ? nfb: uint,        ; not before https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.5
  shopid: Uint256,
  att: [+ Capability] ; attenuation https://github.com/ucan-wg/ucan-ipld/?tab=readme-ov-file
  prf: [* CapToken];   ; proof
}

CapToken = #6.18([
 header : bytes .cbor CoseHeader,
 payload : bytes .cbor CapTokenPayload,
 Signature
])

GuestCaps = [{
  can: ["read"],
  path: ["listings"]
}, {
  can: ["read"],
  path: ["manifest"]
}, {
  can: ["read"],
  path: ["tags"]
}, {
  can: ["add"],
  path: ["orders"]
}]

ClerkCaps = [{
  can: ["read", "write"],
  path: ["listings"]
}, {
  can: ["read", "write"],
  path: ["manifest"]
}, {
  can: ["read", "write"],
  path: ["tags"]
},{
  can: ["read", "write"],
  path: ["orders"]
}]

SubscriptionReqest = {
 // The relay will send events from the shop log starting from this
 // sequence number.
 start_shop_seq_no: uint64,
 // paths being subscribed to
 paths = [+ [+ PathSegment]],
 tokens = [+ CapToken]
}

SignedSubscriptionReqest = #6.18([
   header : bstr .cbor CoseHeader,
   payload : bstr .cbor SubscriptionReqest,
   Signature
])